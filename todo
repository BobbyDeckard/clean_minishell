DONE:
X.	Check semicolons, maybe as simple as defining them as the root node
=>	Subject explicitly says we do NOT need to handle semicolons.
X.	Check multiple redirs
	=> peut-être les mettre en série dans children de cmd ? vu que c'est la dernière redir qui fait foi
=>	Once again, AST supremacy had the solution ready to be implemented without having to think about it.
X.	Handle echo $$
X.	Check behaviour for echo $USER, something, wondering about that comma...
	=> Test:
	[input] > echo Hi this is $USER, nice to meet you
	[bash output] > Hi this is ivo, nice to meet you
	[hell output] > Hi this is ivo nice to meet you
X.	We should maybe not separate arguments containing env vars in order to print them right with the spaces
X.	Check exit status globally...
X.	Finish cd builtin
	=> Maybe we don't reproduce bash where it just doesn't make any sense
X.	Check behaviour for export with existing var, and for VAR= without following
	=> If var exists, nothing is done
	=> If VAR= is given as argument, the env entry will be VAR=""
	=> If every env entry is unset, export prints nothing and returns 0
X.	Check wtf_bash screenshot.......
	=> To hell we won't try and reproduce that
X.	Check exit status with builtins in pipes
X.	Check exit status with builtins allover

TO DO:
O.	Check comments left in exec with norminette
O.	PINAILLAGE: signals with heredoc: when C^D, the given input should be considered WITH the preceding '>' character followed by a space at the beginning of lines, + our version gives a warining nonexistent in bash
	+ when C^C, should not print ^C

ERRORS MET:
O:	echo ":>)">file
		works, but
	(echo ":>)")>file
		doesn't
O:	(cat file || cat infile) > outfile
		doesn't work (bad ast)
O:	(cat file || cat infile) | wc -l
		dup2 error

FIN
Vérifier la fiche d'éval sur discord avec Pierre
